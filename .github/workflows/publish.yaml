name: Publish tutorial


# for test only
# on:
#   pull_request:
#     types: [ labeled ]
permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types:
      - closed

jobs:
  get_proposal_slug:
    name: Get Proposal Slug
    # for test only
    # if: ${{ github.event.label.name == 'publish' }}
    if: startsWith(github.head_ref, 'tutorials/') && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    outputs:
      slug: ${{ steps.set_output.outputs.slug }}
    steps:
      - uses: actions/github-script@v6
        id: regex_extract_proposal_id
        with:
          result-encoding: string
          script: |
            const headBranch = context.payload.pull_request.head.ref
            const regex = /tutorials\/([A-z0-9]+(?:[_-][A-z0-9]+)*)/
            const slug = headBranch.match(regex)
            return slug && slug[1] || ''
      - name: Set Output
        id: set_output
        run: |
          echo "::set-output name=slug::${{ steps.regex_extract_proposal_id.outputs.result }}"

  fetch_proposal:
    name: Fetch Proposal
    needs: get_proposal_slug
    if: ${{ needs.get_proposal_slug.outputs.slug }} != ''
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    outputs:
      proposalId: ${{ steps.fetch.outputs.proposalId }}
      creator: ${{ steps.fetch.outputs.creator }}
      streamId: ${{ steps.fetch.outputs.streamId }}
      state: ${{ steps.fetch.outputs.state }}
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/build-builderdao-cli/
      - id: fetch
        env:
          SLUG: ${{ needs.get_proposal_slug.outputs.slug }}
        run: |
          builderdao proposal get -s $SLUG
          PROPOSAL_ID=$(builderdao proposal get -s $SLUG -k id)
          CREATOR=$(builderdao proposal get -s $SLUG -k creator)
          STREAM_ID=$(builderdao proposal get -s $SLUG -k streamId)
          STATE=$(builderdao proposal get -s $SLUG -k state)
          echo "::set-output name=proposalId::$PROPOSAL_ID"
          echo "::set-output name=creator::$CREATOR"
          echo "::set-output name=streamId::$STREAM_ID"
          echo "::set-output name=streamId::$STATE"

  publish_tutorial:
    name: Publish Tutorial
    needs: [ get_proposal_slug, fetch_proposal ]
    if: ${{ needs.fetch_proposal.outputs.proposalId }} != ''
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/build-builderdao-cli/
      - id: publish_tutorial
        env:
          SLUG: ${{ needs.get_proposal_slug.outputs.slug }}
          ARWEAVE_WALLET: ${{ secrets.NEXT_PUBLIC_ARWEAVE_WALLET }}
          ARWEAVE_APP_NAME: ${{ secrets.NEXT_PUBLIC_ARWEAVE_APP_NAME }}
          ARWEAVE_HOST: ${{ secrets.NEXT_PUBLIC_ARWEAVE_HOST }}
          ARWEAVE_PORT: ${{ secrets.NEXT_PUBLIC_ARWEAVE_PORT }}
          ARWEAVE_PROTOCOL: ${{ secrets.NEXT_PUBLIC_ARWEAVE_PROTOCOL }}
          CERAMIC_NODE_URL: ${{ secrets.CERAMIC_NODE_URL }}
          CERAMIC_SEED: ${{ secrets.CERAMIC_SEED }}
        run: |
          builderdao tutorial publish $SLUG

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: ðŸš€ Deployed ${{ needs.get_proposal_slug.outputs.slug }} tutorial.

  set_state:
    name: Set state to published
    needs: [ publish_tutorial, fetch_proposal ]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/build-builderdao-cli/
      - id: set_published
        env:
          PROPOSAL_ID: ${{ needs.fetch_proposal.outputs.proposalId }}
          TESTNET_ADMIN_KP: ${{ secrets.TESTNET_ADMIN_KP }}
        run: |
          builderdao proposal setstate $PROPOSAL_ID --state='published' --adminKp $TESTNET_ADMIN_KP

  update_index:
    name: Update Algolia index
    needs: [ get_proposal_slug, fetch_proposal, set_state ]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/build-builderdao-cli/
      - id: update_algolia_index
        env:
          SLUG: ${{ needs.get_proposal_slug.outputs.slug }}
          ALGOLIA_APP_ID: ${{ secrets.NEXT_PUBLIC_ALGOLIA_APP_ID }}
          ALGOLIA_ACCESS_KEY: ${{ secrets.ALGOLIA_SEARCH_ADMIN_KEY }}
          ALGOLIA_INDEX_NAME: ${{ secrets.NEXT_PUBLIC_ALGOLIA_INDEX_NAME }}
        run: |
          builderdao algolia publish $SLUG --appId $ALGOLIA_APP_ID --accessKey $ALGOLIA_ACCESS_KEY --indexName $ALGOLIA_INDEX_NAME
